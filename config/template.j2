/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_MACD_Params_{{ Timeframe }} : MACDParams {
  Indi_MACD_Params_{{ Timeframe }}() : MACDParams(indi_macd_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ MACD_Indi_MACD_Applied_Price | default(0) }};
    ema_fast_period = {{ MACD_Indi_MACD_Period_Fast | default(0) }};
    ema_slow_period = {{ MACD_Indi_MACD_Period_Slow | default(0) }};
    signal_period = {{ MACD_Indi_MACD_Period_Signal | default(0) }};
    shift = {{ MACD_Indi_MACD_Shift | default(0) }};
  }
} indi_macd_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_MACD_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_MACD_Params_{{ Timeframe }}() : StgParams(stg_macd_defaults) {
    lot_size = {{ MACD_LotSize | default(0) }};
    signal_open_method = {{ MACD_SignalOpenMethod | default(0) }};
    signal_open_filter = {{ MACD_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ MACD_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ MACD_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ MACD_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ MACD_SignalCloseLevel | default(0) }};
    price_stop_method = {{ MACD_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ MACD_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ MACD_TickFilterMethod  | default(1) }};
    max_spread = {{ MACD_MaxSpread | default(0) }};
  }
} stg_macd_{{ Timeframe | lower }};
